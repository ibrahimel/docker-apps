#! /bin/sh

# Directs container network through VPN connection.
# This is configured to use ProtonVPN. Edit credentials in build/vpn-router/entrypoint.sh
# If you want to use another provider, edit the DNS below and edit ovpn filed folder above

USER=$1 # User in container (Same as app name)
DOCKER_HOMES="$HOME/.docker-apps/homes" # Path in host for container home folder persistence
CONTAINER_HOME="$DOCKER_HOMES/$1" # Home for current container in host
DOCKER_USER_HOME="/home/$USER" # Home for current container inside container
COMMON_FOLDER="$HOME/Downloads" # Shared folder between host and container 
CONT_NAME="$1-$(date +'%s')" # Unique name for container
VPN_NAME="vpn-$1-$(date +'%s')" # Container name for VPN net container

# Make home for container if not existent
if [ ! -d $CONTAINER_HOME ]; then
    mkdir $CONTAINER_HOME
fi

# Run container to establish Proton VPN Connection
docker run -d --name "$VPN_NAME" --cap-add NET_ADMIN --privileged --dns "10.8.8.1" --dns "1.1.1.1" vpn-router

#Allow connections to X11
xhost +

# Run container (Additional argument can be assed for customisation = $2 --net=host... )
docker run \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v "$CONTAINER_HOME":"$DOCKER_USER_HOME" \
    -v "$COMMON_FOLDER":"$DOCKER_USER_HOME/Downloads" \
    --device /dev/snd \
    -e DISPLAY=unix$DISPLAY \
    -v "/run/user/1000/pulse:/run/pulse:ro" \
    -e PULSE_SERVER="/run/pulse/native" \
    --user=$1 \
    --name "$CONT_NAME" \
    --net="container:$VPN_NAME" \
    $2 $1

# Cleanup
docker stop "$CONT_NAME"
docker stop "$VPN_NAME"
docker rm "$CONT_NAME" --force
docker rm "$VPN_NAME" --force

# Re-enable access control to X11
xhost -
